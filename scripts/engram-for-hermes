#!/bin/bash
# engram-for-hermes
# Launch Engram as a Hermes component

# ANSI color codes for terminal output
BLUE="\033[94m"
GREEN="\033[92m"
YELLOW="\033[93m"
RED="\033[91m"
BOLD="\033[1m"
RESET="\033[0m"

# Get the directory where the script is located
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
ENGRAM_DIR="$( cd "$SCRIPT_DIR/.." && pwd )"

# Default settings
CLIENT_ID="default"
DATA_DIR="$HOME/.engram"
HOST="127.0.0.1"
PORT=8000
HERMES_ENDPOINT="http://localhost:8100/api"
DEBUG=false

# Parse command line arguments
while [[ $# -gt 0 ]]; do
  case $1 in
    --client-id)
      CLIENT_ID="$2"
      shift 2
      ;;
    --data-dir)
      DATA_DIR="$2"
      shift 2
      ;;
    --host)
      HOST="$2"
      shift 2
      ;;
    --port)
      PORT="$2"
      shift 2
      ;;
    --hermes-endpoint)
      HERMES_ENDPOINT="$2"
      shift 2
      ;;
    --debug)
      DEBUG=true
      shift
      ;;
    --help)
      echo "Usage: engram-for-hermes [OPTIONS]"
      echo ""
      echo "Options:"
      echo "  --client-id ID            Default client ID (default: default)"
      echo "  --data-dir DIR            Data directory (default: ~/.engram)"
      echo "  --host HOST               Host to bind server to (default: 127.0.0.1)"
      echo "  --port PORT               Port to run server on (default: 8000)"
      echo "  --hermes-endpoint URL     Hermes API endpoint (default: http://localhost:8100/api)"
      echo "  --debug                   Enable debug logging"
      echo "  --help                    Show this help message"
      exit 0
      ;;
    *)
      echo "Unknown option: $1"
      echo "Try '$0 --help' for more information."
      exit 1
      ;;
  esac
done

# Set environment variables for the Python process
export ENGRAM_MODE="hermes"
export ENGRAM_CLIENT_ID="$CLIENT_ID"
export ENGRAM_DATA_DIR="$DATA_DIR"
export ENGRAM_HOST="$HOST"
export ENGRAM_PORT="$PORT"
export HERMES_ENDPOINT="$HERMES_ENDPOINT"

if [ "$DEBUG" = true ]; then
  export ENGRAM_DEBUG="1"
  echo -e "${YELLOW}Debug mode enabled${RESET}"
fi

# Make sure data directory exists
mkdir -p "$DATA_DIR"

# Set up Python path to find Engram
export PYTHONPATH="$ENGRAM_DIR:$PYTHONPATH"

# Check for Python
if ! command -v python3 &> /dev/null; then
  echo -e "${RED}Python 3 not found. Please install Python 3.7 or later.${RESET}"
  exit 1
fi

# Create log directory
LOG_DIR="$HOME/.tekton/logs"
mkdir -p "$LOG_DIR"

# Check if Hermes is available
echo -e "${BLUE}Checking Hermes availability at $HERMES_ENDPOINT...${RESET}"
if curl -s "$HERMES_ENDPOINT/health" > /dev/null 2>&1; then
    echo -e "${GREEN}Hermes is available at $HERMES_ENDPOINT${RESET}"
else
    echo -e "${YELLOW}Warning: Hermes does not appear to be running at $HERMES_ENDPOINT${RESET}"
    echo -e "${YELLOW}Engram will start but may not be able to connect to Hermes.${RESET}"
    
    read -p "Continue anyway? (y/n) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        exit 1
    fi
fi

echo -e "${BLUE}${BOLD}Starting Engram Memory Service with Hermes Integration${RESET}"
echo -e "${BLUE}Host:${RESET} $HOST"
echo -e "${BLUE}Port:${RESET} $PORT"
echo -e "${BLUE}Data directory:${RESET} $DATA_DIR"
echo -e "${BLUE}Default client ID:${RESET} $CLIENT_ID"
echo -e "${BLUE}Hermes endpoint:${RESET} $HERMES_ENDPOINT"

# Start the server
python3 -m engram.api.server --client-id "$CLIENT_ID" --data-dir "$DATA_DIR" --host "$HOST" --port "$PORT" ${DEBUG:+--debug} || {
  echo -e "${RED}Failed to start Engram server${RESET}"
  exit 1
}